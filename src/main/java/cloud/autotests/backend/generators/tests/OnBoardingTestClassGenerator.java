package cloud.autotests.backend.generators.tests;

import cloud.autotests.backend.models.Order;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;

import java.io.IOException;
import java.util.List;

import static cloud.autotests.backend.generators.tests.TestClassStructureGenerator.*;
import static cloud.autotests.backend.generators.tests.TestStepsGenerator.generateCheckTitleStep;
import static cloud.autotests.backend.generators.tests.TestStepsGenerator.generateOpenPageStep;
import static cloud.autotests.backend.utils.HtmlUtils.getHtmlDom;
import static cloud.autotests.backend.utils.HtmlUtils.getTitleValue;
import static cloud.autotests.backend.utils.RegexpUtils.getUrlsFromOrder;
import static java.lang.String.format;

public class OnBoardingTestClassGenerator {

    public static String generateOnBoardingTestClass(String testClassNamePrefix, Order order) { // todo add link to Jira issue
        StringBuilder testMethods = new StringBuilder();

        testMethods.append(generateFromStepsTestMethod(order));
        testMethods.append(generateFromUrlTestMethods(order));

        return generateTestClass(testClassNamePrefix, testMethods.toString()); // todo add classDependencyGenerator
    }

    public static String generateFromStepsTestMethod(Order order) { // todo add link to Jira issue
        StringBuilder generatedSteps = new StringBuilder();
        String testMethodDescription = "Soon to be implemented by QA.GURU engineers";
        String testMethodNamePrefix = "generated";
        String stepContent = "// todo";

        String[] steps = order.getSteps().split("\n");
        for (String stepDescription : steps) {
            generatedSteps.append(
                    generateTestStep(stepDescription, stepContent));
        }

        return generateTestMethod(testMethodDescription, order.getTitle(),
                testMethodNamePrefix, generatedSteps.toString());
    }

    public static String generateFromUrlTestMethods(Order order) {
        List<String> urls = getUrlsFromOrder(order.getSteps());
        if (urls.size() == 0)
            return null;

        String url = urls.get(0);
        Document htmlDom = getHtmlDom(url);

        StringBuilder testMethods = new StringBuilder();
        testMethods.append(generateTitleTestMethod(htmlDom, url));
//        testMethods.append(generateHeaderTestMethods(order, htmlDom));

        return testMethods.toString();
    }


    public static String generateTitleTestMethod(Document htmlDom, String url) {
        String titleValue = getTitleValue(htmlDom);
        if (titleValue.isEmpty())
            return "";

        String testMethodDescription = "Autogenerated, because your test steps contain text 'http...' and the page has &lt;title&gt;";
        String testMethodDisplayName = "Page title test";
        String testMethodNamePrefix = "title";
        String testSteps = generateOpenPageStep(url) +
                generateCheckTitleStep(titleValue);

        return generateTestMethod(testMethodDescription, testMethodDisplayName,
                testMethodNamePrefix, testSteps);
    }

    public static String generateHeaderTestMethods(Order order, Document htmlDom) {

        return "";
    }

}
